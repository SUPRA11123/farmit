[{"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\index.js":"1","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Landing\\Landing.js":"2","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Dashboard.js":"3","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Landing\\Map.js":"4","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Landing\\CountrySelect.js":"5","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Home.js":"6","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Weather.js":"7","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Resources.js":"8","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Settings.js":"9","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Maps.js":"10","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Monitor.js":"11","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Predictions.js":"12"},{"size":1568,"mtime":1682287182392,"results":"13","hashOfConfig":"14"},{"size":9944,"mtime":1682602654375,"results":"15","hashOfConfig":"14"},{"size":8548,"mtime":1682605419080,"results":"16","hashOfConfig":"14"},{"size":1056,"mtime":1679665843332,"results":"17","hashOfConfig":"14"},{"size":16644,"mtime":1679665843331,"results":"18","hashOfConfig":"14"},{"size":2190,"mtime":1682098523119,"results":"19","hashOfConfig":"14"},{"size":7545,"mtime":1682098523120,"results":"20","hashOfConfig":"14"},{"size":189,"mtime":1679665850865,"results":"21","hashOfConfig":"14"},{"size":237,"mtime":1680088404516,"results":"22","hashOfConfig":"14"},{"size":23903,"mtime":1682626818006,"results":"23","hashOfConfig":"14"},{"size":183,"mtime":1679665850860,"results":"24","hashOfConfig":"14"},{"size":195,"mtime":1679665850863,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ybaydr",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\index.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Landing\\Landing.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Dashboard.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Landing\\Map.js",["65"],[],"import React from 'react'\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nfunction MyComponent(props){\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyCopODfgpyWWKlvCY8hyTSiY9AAoNTxnBE\"\r\n  })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n\r\n    setMap(map);\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  return isLoaded ? (\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={props.center}\r\n        zoom={5}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n        key={props.center.lat + props.center.lng}\r\n        onClick={props.onClick}\r\n      >\r\n        <Marker \r\n        position={props.markerPosition} \r\n        onLoad={onLoad}\r\n        />\r\n        <></>\r\n      </GoogleMap>\r\n  ) : <></>\r\n}\r\n\r\nexport default React.memo(MyComponent)",[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Landing\\CountrySelect.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Home.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Weather.js",["66"],[],"import React from \"react\";\r\nimport { Chart } from 'chart.js/auto';\r\n\r\nclass Weather extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setForecast = this.setForecast.bind(this);\r\n        this.state = {\r\n            day: 0,\r\n            forecastData: [],\r\n            forecastLabels: []\r\n          };\r\n        this.myChart = null;\r\n    }\r\n\r\n    async populateWeatherForecast(weatherForecast) {\r\n        console.log(weatherForecast);\r\n    \r\n        let temperature = [];\r\n        let Labels = [];\r\n        let forecast = [];\r\n        let forecastLabels = [];\r\n\r\n        this.setState({\r\n            forecastData: forecast,\r\n            forecastLabels: forecastLabels\r\n          });\r\n    \r\n        const today = new Date();\r\n    \r\n        for (let i = 0; i < weatherForecast.list.length; i++) {\r\n            temperature.push(weatherForecast.list[i].main.temp);\r\n    \r\n            var day = new Date(\r\n                weatherForecast.list[i].dt_txt.slice(0, 4),\r\n                weatherForecast.list[i].dt_txt.slice(5, 7) - 1,\r\n                weatherForecast.list[i].dt_txt.slice(8, 10)\r\n            );\r\n            Labels.push(\r\n                this.getLabels(day) + ' @' + weatherForecast.list[i].dt_txt.slice(10, 16)\r\n            );\r\n        }\r\n    \r\n        const chunkSize = 10;\r\n        for (let i = 0; i < temperature.length; i += chunkSize) {\r\n            const tempChunk = temperature.slice(i, i + chunkSize);\r\n            const labelChunk = Labels.slice(i, i + chunkSize);\r\n            forecast.push(tempChunk);\r\n            forecastLabels.push(labelChunk);\r\n        }\r\n    \r\n        const forecastData = forecast[this.state.day]; // Initialize forecastData\r\n        const forecastLabelsData = forecastLabels[this.state.day]; // Initialize forecastLabelsData\r\n    \r\n        const ctx = document.getElementById('myChart').getContext('2d');\r\n    \r\n        this.myChart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: forecastLabelsData,\r\n                datasets: [\r\n                    {\r\n                        label: 'Temperature',\r\n                        gridLines: 'false',\r\n                        data: forecastData,\r\n                        borderColor: '#0ba837',\r\n                        tension: 0.4,\r\n                        backgroundColor: '#BAECB8',\r\n                        pointStyle: 'rectRounded',\r\n                        fill: true,\r\n                        lineTension: 0.4,\r\n                    },\r\n                ],\r\n            },\r\n            options: {\r\n                plugins: {\r\n                    legend: {\r\n                        display: false,\r\n                    },\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                    },\r\n                    x: {\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.populateWeatherForecast(this.props.weatherForecast);\r\n        this.getDayBtns();\r\n    }\r\n\r\n    convertToKM(speed){\r\n        return (speed * 3.6).toFixed(2);\r\n    }\r\n\r\n    getSunriseSunset() {\r\n        \r\n        var sunriseZero; var sunsetZero;\r\n        var sunriseEpoch = this.props.weatherData.sys.sunrise;\r\n        var sunrise = new Date(0); \r\n        sunrise.setUTCSeconds(sunriseEpoch);\r\n        if(sunrise.getMinutes() < 10) {sunriseZero = \"0\";}else{sunriseZero=\"\"}\r\n\r\n        var sunsetEpoch = this.props.weatherData.sys.sunset;\r\n        var sunset = new Date(0); \r\n        sunset.setUTCSeconds(sunsetEpoch);\r\n        if(sunset.getMinutes() < 10) {sunsetZero = \"0\";}else{sunsetZero=\"\"}\r\n\r\n        return <><p><i className=\"fa-solid fa-circle-up\"></i> {sunrise.getHours()}:{sunriseZero}{sunrise.getMinutes()}  <i className=\"fa-solid fa-circle-down\"></i> {sunset.getHours()}:{sunsetZero}{sunset.getMinutes()}</p></>;\r\n    }\r\n\r\n    displayTime(){\r\n        var x = new Date();\r\n        var zero;\r\n        if(x.getMinutes() < 10) {zero = \"0\";}else{zero=\"\"}\r\n        var date = ' ' + x.getHours( )+ \":\" + zero +  x.getMinutes();\r\n        return date;\r\n    }\r\n\r\n    getDay(x) {\r\n        let weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n        var today = new Date();\r\n        var result = today.setDate(today.getDate() + x);\r\n        let date = new Date(result);\r\n        return weekday[date.getDay()];\r\n    }\r\n\r\n    getLabels(day) {\r\n        let weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n       \r\n        return weekday[day.getDay()];\r\n    }\r\n\r\n    getDayBtns(){\r\n    \r\n        for(let i = 1; i < 4; i++ ) {\r\n            var dayBtn = document.getElementById('dayBtn' + i);\r\n            dayBtn.innerHTML = this.getDay(i);\r\n\r\n        }\r\n    }\r\n\r\n    setForecast(x) {\r\n\r\n        this.setState({\r\n            day: x\r\n        }, () => {\r\n            this.updateChart();\r\n        });\r\n    }\r\n\r\n    updateChart() {\r\n        const forecastData = this.state.forecastData;\r\n        const forecastLabels = this.state.forecastLabels;\r\n        this.myChart.data.labels = forecastLabels[this.state.day];\r\n        this.myChart.data.datasets[0].data = forecastData[this.state.day];\r\n        this.myChart.update();\r\n    }\r\n\r\n    render() {\r\n\r\n        let weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n        var today = new Date();\r\n\r\n        return (\r\n            <>\r\n            <div className=\"weatherCityContainer\">\r\n                <h2>{(this.props.weatherData.main.temp).toFixed(0)}°C</h2>\r\n                <ul>\r\n                    <li>{weekday[today.getDay()]}</li>\r\n                    <li>{this.displayTime()}</li>\r\n                    <li>{this.props.weatherData.weather[0].description}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"weatheDataContainer\">\r\n                <div style={{marginLeft: 0}}>\r\n                    <h2>Pressure</h2>\r\n                    <p>{this.props.weatherData.main.pressure} hpa</p>\r\n                </div>\r\n            \r\n                <div>\r\n                    <h2>Humidity</h2>\r\n                    <p>{this.props.weatherData.main.humidity}%</p>\r\n                </div>\r\n     \r\n                <div>\r\n                    <h2>Wind</h2>\r\n                    <p>{this.convertToKM(this.props.weatherData.wind.speed)} km/h</p>\r\n                </div>\r\n\r\n                <div id=\"sunsetSunrise\">\r\n                    <h2>Sunrise and Sunset</h2>\r\n                    {this.getSunriseSunset()}\r\n                </div>\r\n \r\n            </div>\r\n            \r\n            <div className=\"lineChartContainer\">\r\n            <h2>5 Day Forecast</h2>\r\n            <canvas id=\"myChart\" height='25' width='100px'></canvas>\r\n            </div>\r\n            <ul className=\"daySelector\">\r\n               \r\n                <li><button onClick={() => this.setForecast(0)} className=\"daySelectorActive\" id=\"dayBtn0\">Today</button></li>\r\n                <li><button onClick={() => this.setForecast(1)} id=\"dayBtn1\"></button></li>\r\n                <li><button onClick={() => this.setForecast(2)} id=\"dayBtn2\"></button></li>\r\n                <li><button onClick={() => this.setForecast(3)} id=\"dayBtn3\"></button></li>\r\n              \r\n\r\n            </ul>\r\n    \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;\r\n","C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Resources.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Settings.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Maps.js",["67","68","69","70","71","72"],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Monitor.js",[],[],"C:\\ISEP\\3º ANO\\2º SEMESTRE\\PESTI\\AgroSensor\\farmit\\frontend\\src\\components\\Dashboard\\Utilities\\Predictions.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":16,"column":10,"nodeType":"75","messageId":"76","endLine":16,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":30,"column":15,"nodeType":"75","messageId":"76","endLine":30,"endColumn":20},{"ruleId":"73","severity":1,"message":"78","line":50,"column":17,"nodeType":"75","messageId":"76","endLine":50,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":59,"column":21,"nodeType":"75","messageId":"81","endLine":59,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":62,"column":21,"nodeType":"75","messageId":"81","endLine":62,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":70,"column":27,"nodeType":"75","messageId":"76","endLine":70,"endColumn":36},{"ruleId":"73","severity":1,"message":"83","line":90,"column":27,"nodeType":"75","messageId":"76","endLine":90,"endColumn":33},{"ruleId":"73","severity":1,"message":"83","line":468,"column":27,"nodeType":"75","messageId":"76","endLine":468,"endColumn":33},"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","'today' is assigned a value but never used.","'i' is assigned a value but never used.","no-redeclare","'cell' is already defined.","redeclared","'rectangle' is assigned a value but never used.","'marker' is assigned a value but never used."]