{"ast":null,"code":"var _jsxFileName = \"C:\\\\ISEP\\\\3\\xBA ANO\\\\2\\xBA SEMESTRE\\\\PESTI\\\\AgroSensor\\\\farmit\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Utilities\\\\Weather.js\";\nimport React from \"react\";\nimport { Chart } from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setForecast = this.setForecast.bind(this);\n    this.state = {\n      day: 0,\n      forecastData: [],\n      forecastLabels: []\n    };\n    this.myChart = null;\n  }\n  async populateWeatherForecast(weatherForecast) {\n    console.log(weatherForecast);\n    let temperature = [];\n    let Labels = [];\n    let forecast = [];\n    let forecastLabels = [];\n    this.setState({\n      forecastData: forecast,\n      forecastLabels: forecastLabels\n    });\n    const today = new Date();\n    for (let i = 0; i < weatherForecast.list.length; i++) {\n      temperature.push(weatherForecast.list[i].main.temp);\n      var day = new Date(weatherForecast.list[i].dt_txt.slice(0, 4), weatherForecast.list[i].dt_txt.slice(5, 7) - 1, weatherForecast.list[i].dt_txt.slice(8, 10));\n      Labels.push(this.getLabels(day) + ' @' + weatherForecast.list[i].dt_txt.slice(10, 16));\n    }\n    const chunkSize = 10;\n    for (let i = 0; i < temperature.length; i += chunkSize) {\n      const tempChunk = temperature.slice(i, i + chunkSize);\n      const labelChunk = Labels.slice(i, i + chunkSize);\n      forecast.push(tempChunk);\n      forecastLabels.push(labelChunk);\n    }\n    const forecastData = forecast[this.state.day]; // Initialize forecastData\n    const forecastLabelsData = forecastLabels[this.state.day]; // Initialize forecastLabelsData\n\n    const ctx = document.getElementById('myChart').getContext('2d');\n    this.myChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: forecastLabelsData,\n        datasets: [{\n          label: 'Temperature',\n          gridLines: 'false',\n          data: forecastData,\n          borderColor: '#0ba837',\n          tension: 0.4,\n          backgroundColor: '#BAECB8',\n          pointStyle: 'rectRounded',\n          fill: true,\n          lineTension: 0.4\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        scales: {\n          y: {\n            grid: {\n              display: false\n            }\n          },\n          x: {\n            grid: {\n              display: false\n            }\n          }\n        }\n      }\n    });\n  }\n  componentDidMount() {\n    this.populateWeatherForecast(this.props.weatherForecast);\n    this.getDayBtns();\n  }\n  convertToKM(speed) {\n    return (speed * 3.6).toFixed(2);\n  }\n  getSunriseSunset() {\n    var sunriseZero;\n    var sunsetZero;\n    var sunriseEpoch = this.props.weatherData.sys.sunrise;\n    var sunrise = new Date(0);\n    sunrise.setUTCSeconds(sunriseEpoch);\n    if (sunrise.getMinutes() < 10) {\n      sunriseZero = \"0\";\n    } else {\n      sunriseZero = \"\";\n    }\n    var sunsetEpoch = this.props.weatherData.sys.sunset;\n    var sunset = new Date(0);\n    sunset.setUTCSeconds(sunsetEpoch);\n    if (sunset.getMinutes() < 10) {\n      sunsetZero = \"0\";\n    } else {\n      sunsetZero = \"\";\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), \" \", sunrise.getHours(), \":\", sunriseZero, sunrise.getMinutes(), \"  \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 121\n        }, this), \" \", sunset.getHours(), \":\", sunsetZero, sunset.getMinutes()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n  displayTime() {\n    var x = new Date();\n    var zero;\n    if (x.getMinutes() < 10) {\n      zero = \"0\";\n    } else {\n      zero = \"\";\n    }\n    var date = ' ' + x.getHours() + \":\" + zero + x.getMinutes();\n    return date;\n  }\n  getDay(x) {\n    let weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    var today = new Date();\n    var result = today.setDate(today.getDate() + x);\n    let date = new Date(result);\n    return weekday[date.getDay()];\n  }\n  getLabels(day) {\n    let weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return weekday[day.getDay()];\n  }\n  getDayBtns() {\n    for (let i = 1; i < 4; i++) {\n      var dayBtn = document.getElementById('dayBtn' + i);\n      dayBtn.innerHTML = this.getDay(i);\n    }\n  }\n  setForecast(x) {\n    this.setState({\n      day: x\n    }, () => {\n      this.updateChart();\n    });\n  }\n  updateChart() {\n    const forecastData = this.state.forecastData;\n    const forecastLabels = this.state.forecastLabels;\n    this.myChart.data.labels = forecastLabels[this.state.day];\n    this.myChart.data.datasets[0].data = forecastData[this.state.day];\n    this.myChart.update();\n  }\n  render() {\n    let weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    var today = new Date();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherCityContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.props.weatherData.main.temp.toFixed(0), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: weekday[today.getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: this.displayTime()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: this.props.weatherData.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatheDataContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [this.props.weatherData.main.pressure, \" hpa\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [this.props.weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wind\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [this.convertToKM(this.props.weatherData.wind.speed), \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"sunsetSunrise\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sunrise and Sunset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this), this.getSunriseSunset()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lineChartContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"5 Day Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"myChart\",\n          height: \"25\",\n          width: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"daySelector\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.setForecast(0),\n            className: \"daySelectorActive\",\n            id: \"dayBtn0\",\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.setForecast(1),\n            id: \"dayBtn1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.setForecast(2),\n            id: \"dayBtn2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.setForecast(3),\n            id: \"dayBtn3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Weather;","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Weather","Component","constructor","props","setForecast","bind","state","day","forecastData","forecastLabels","myChart","populateWeatherForecast","weatherForecast","console","log","temperature","Labels","forecast","setState","today","Date","i","list","length","push","main","temp","dt_txt","slice","getLabels","chunkSize","tempChunk","labelChunk","forecastLabelsData","ctx","document","getElementById","getContext","type","data","labels","datasets","label","gridLines","borderColor","tension","backgroundColor","pointStyle","fill","lineTension","options","plugins","legend","display","scales","y","grid","x","componentDidMount","getDayBtns","convertToKM","speed","toFixed","getSunriseSunset","sunriseZero","sunsetZero","sunriseEpoch","weatherData","sys","sunrise","setUTCSeconds","getMinutes","sunsetEpoch","sunset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","getHours","displayTime","zero","date","getDay","weekday","result","setDate","getDate","dayBtn","innerHTML","updateChart","update","render","weather","description","style","marginLeft","pressure","humidity","wind","id","height","width","onClick"],"sources":["C:/ISEP/3º ANO/2º SEMESTRE/PESTI/AgroSensor/farmit/frontend/src/components/Dashboard/Utilities/Weather.js"],"sourcesContent":["import React from \"react\";\r\nimport { Chart } from 'chart.js/auto';\r\n\r\nclass Weather extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setForecast = this.setForecast.bind(this);\r\n        this.state = {\r\n            day: 0,\r\n            forecastData: [],\r\n            forecastLabels: []\r\n          };\r\n        this.myChart = null;\r\n    }\r\n\r\n    async populateWeatherForecast(weatherForecast) {\r\n        console.log(weatherForecast);\r\n    \r\n        let temperature = [];\r\n        let Labels = [];\r\n        let forecast = [];\r\n        let forecastLabels = [];\r\n\r\n        this.setState({\r\n            forecastData: forecast,\r\n            forecastLabels: forecastLabels\r\n          });\r\n    \r\n        const today = new Date();\r\n    \r\n        for (let i = 0; i < weatherForecast.list.length; i++) {\r\n            temperature.push(weatherForecast.list[i].main.temp);\r\n    \r\n            var day = new Date(\r\n                weatherForecast.list[i].dt_txt.slice(0, 4),\r\n                weatherForecast.list[i].dt_txt.slice(5, 7) - 1,\r\n                weatherForecast.list[i].dt_txt.slice(8, 10)\r\n            );\r\n            Labels.push(\r\n                this.getLabels(day) + ' @' + weatherForecast.list[i].dt_txt.slice(10, 16)\r\n            );\r\n        }\r\n    \r\n        const chunkSize = 10;\r\n        for (let i = 0; i < temperature.length; i += chunkSize) {\r\n            const tempChunk = temperature.slice(i, i + chunkSize);\r\n            const labelChunk = Labels.slice(i, i + chunkSize);\r\n            forecast.push(tempChunk);\r\n            forecastLabels.push(labelChunk);\r\n        }\r\n    \r\n        const forecastData = forecast[this.state.day]; // Initialize forecastData\r\n        const forecastLabelsData = forecastLabels[this.state.day]; // Initialize forecastLabelsData\r\n    \r\n        const ctx = document.getElementById('myChart').getContext('2d');\r\n    \r\n        this.myChart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: forecastLabelsData,\r\n                datasets: [\r\n                    {\r\n                        label: 'Temperature',\r\n                        gridLines: 'false',\r\n                        data: forecastData,\r\n                        borderColor: '#0ba837',\r\n                        tension: 0.4,\r\n                        backgroundColor: '#BAECB8',\r\n                        pointStyle: 'rectRounded',\r\n                        fill: true,\r\n                        lineTension: 0.4,\r\n                    },\r\n                ],\r\n            },\r\n            options: {\r\n                plugins: {\r\n                    legend: {\r\n                        display: false,\r\n                    },\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                    },\r\n                    x: {\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.populateWeatherForecast(this.props.weatherForecast);\r\n        this.getDayBtns();\r\n    }\r\n\r\n    convertToKM(speed){\r\n        return (speed * 3.6).toFixed(2);\r\n    }\r\n\r\n    getSunriseSunset() {\r\n        \r\n        var sunriseZero; var sunsetZero;\r\n        var sunriseEpoch = this.props.weatherData.sys.sunrise;\r\n        var sunrise = new Date(0); \r\n        sunrise.setUTCSeconds(sunriseEpoch);\r\n        if(sunrise.getMinutes() < 10) {sunriseZero = \"0\";}else{sunriseZero=\"\"}\r\n\r\n        var sunsetEpoch = this.props.weatherData.sys.sunset;\r\n        var sunset = new Date(0); \r\n        sunset.setUTCSeconds(sunsetEpoch);\r\n        if(sunset.getMinutes() < 10) {sunsetZero = \"0\";}else{sunsetZero=\"\"}\r\n\r\n        return <><p><i className=\"fa-solid fa-circle-up\"></i> {sunrise.getHours()}:{sunriseZero}{sunrise.getMinutes()}  <i className=\"fa-solid fa-circle-down\"></i> {sunset.getHours()}:{sunsetZero}{sunset.getMinutes()}</p></>;\r\n    }\r\n\r\n    displayTime(){\r\n        var x = new Date();\r\n        var zero;\r\n        if(x.getMinutes() < 10) {zero = \"0\";}else{zero=\"\"}\r\n        var date = ' ' + x.getHours( )+ \":\" + zero +  x.getMinutes();\r\n        return date;\r\n    }\r\n\r\n    getDay(x) {\r\n        let weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n        var today = new Date();\r\n        var result = today.setDate(today.getDate() + x);\r\n        let date = new Date(result);\r\n        return weekday[date.getDay()];\r\n    }\r\n\r\n    getLabels(day) {\r\n        let weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n       \r\n        return weekday[day.getDay()];\r\n    }\r\n\r\n    getDayBtns(){\r\n    \r\n        for(let i = 1; i < 4; i++ ) {\r\n            var dayBtn = document.getElementById('dayBtn' + i);\r\n            dayBtn.innerHTML = this.getDay(i);\r\n\r\n        }\r\n    }\r\n\r\n    setForecast(x) {\r\n\r\n        this.setState({\r\n            day: x\r\n        }, () => {\r\n            this.updateChart();\r\n        });\r\n    }\r\n\r\n    updateChart() {\r\n        const forecastData = this.state.forecastData;\r\n        const forecastLabels = this.state.forecastLabels;\r\n        this.myChart.data.labels = forecastLabels[this.state.day];\r\n        this.myChart.data.datasets[0].data = forecastData[this.state.day];\r\n        this.myChart.update();\r\n    }\r\n\r\n    render() {\r\n\r\n        let weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n        var today = new Date();\r\n\r\n        return (\r\n            <>\r\n            <div className=\"weatherCityContainer\">\r\n                <h2>{(this.props.weatherData.main.temp).toFixed(0)}°C</h2>\r\n                <ul>\r\n                    <li>{weekday[today.getDay()]}</li>\r\n                    <li>{this.displayTime()}</li>\r\n                    <li>{this.props.weatherData.weather[0].description}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"weatheDataContainer\">\r\n                <div style={{marginLeft: 0}}>\r\n                    <h2>Pressure</h2>\r\n                    <p>{this.props.weatherData.main.pressure} hpa</p>\r\n                </div>\r\n            \r\n                <div>\r\n                    <h2>Humidity</h2>\r\n                    <p>{this.props.weatherData.main.humidity}%</p>\r\n                </div>\r\n     \r\n                <div>\r\n                    <h2>Wind</h2>\r\n                    <p>{this.convertToKM(this.props.weatherData.wind.speed)} km/h</p>\r\n                </div>\r\n\r\n                <div id=\"sunsetSunrise\">\r\n                    <h2>Sunrise and Sunset</h2>\r\n                    {this.getSunriseSunset()}\r\n                </div>\r\n \r\n            </div>\r\n            \r\n            <div className=\"lineChartContainer\">\r\n            <h2>5 Day Forecast</h2>\r\n            <canvas id=\"myChart\" height='25' width='100px'></canvas>\r\n            </div>\r\n            <ul className=\"daySelector\">\r\n               \r\n                <li><button onClick={() => this.setForecast(0)} className=\"daySelectorActive\" id=\"dayBtn0\">Today</button></li>\r\n                <li><button onClick={() => this.setForecast(1)} id=\"dayBtn1\"></button></li>\r\n                <li><button onClick={() => this.setForecast(2)} id=\"dayBtn2\"></button></li>\r\n                <li><button onClick={() => this.setForecast(3)} id=\"dayBtn3\"></button></li>\r\n              \r\n\r\n            </ul>\r\n    \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}