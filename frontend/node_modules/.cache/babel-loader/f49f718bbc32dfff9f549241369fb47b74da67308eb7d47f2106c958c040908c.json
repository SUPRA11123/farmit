{"ast":null,"code":"var _jsxFileName = \"/Users/ewanallison/Desktop/FarmIT/github/Untitled/frontend/src/components/Dashboard/Utilities/Maps.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = process.env.REACT_APP_URL;\nclass Maps extends React.Component {\n  async componentDidMount() {\n    // check if any field already exists\n\n    const fields = await this.getFields(this.props.farmDetails.id);\n    console.log(fields);\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      mapTypeId: \"satellite\",\n      center: {\n        lat: this.props.farmDetails.latitude,\n        lng: this.props.farmDetails.longitude\n      },\n      zoom: 15,\n      streetViewControl: false,\n      mapTypeControl: false\n    });\n    const marker = new window.google.maps.Marker({\n      position: {\n        lat: this.props.farmDetails.latitude,\n        lng: this.props.farmDetails.longitude\n      },\n      map: map,\n      label: {\n        fontFamily: 'Fontawesome',\n        text: '\\uf015',\n        color: 'white'\n      }\n    });\n    var table = document.getElementById(\"fieldTable\").getElementsByTagName('tbody')[0];\n    var centreMap = document.getElementById(\"centreToMap\");\n    centreMap.addEventListener(\"click\", () => {\n      map.setCenter(marker.getPosition());\n      map.setZoom(15);\n    });\n    if (fields.length > 0) {\n      var i = 0;\n      fields.forEach(field => {\n        var row = table.insertRow(0);\n        var cell = row.insertCell(0);\n        cell.innerHTML = \"<span>\" + field.name + \"</span>\";\n        var cell = row.insertCell(1);\n        cell.innerHTML = \"<span>Conditions</span>\";\n        var cell = row.insertCell(2);\n        cell.innerHTML = \"<span>\" + field.crop_type + \"</span>\";\n        if (field.type === \"rectangle\") {\n          const coordinates = field.coordinates.split(\";\");\n          const rectangle = new window.google.maps.Rectangle({\n            strokeColor: \"#0ba837\",\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: \"#0ba837\",\n            fillOpacity: 0.35,\n            map,\n            bounds: {\n              north: parseFloat(coordinates[0]),\n              south: parseFloat(coordinates[2]),\n              east: parseFloat(coordinates[1]),\n              west: parseFloat(coordinates[3])\n            },\n            isComplete: false\n          });\n          const lat = (parseFloat(coordinates[0]) + parseFloat(coordinates[2])) / 2;\n          const lng = (parseFloat(coordinates[1]) + parseFloat(coordinates[3])) / 2;\n          const marker = new window.google.maps.Marker({\n            position: {\n              lat: lat,\n              lng: lng\n            },\n            map: map,\n            label: {\n              text: field.name,\n              color: \"#ffffff\",\n              fontWeight: \"bold\",\n              fontSize: \"10px\"\n            },\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              scale: 0\n            }\n          });\n        } else {\n          // separate the coordinates by ;\n          const coordinates = field.coordinates.split(\";\");\n\n          // split each coordinate by ,\n          const coordinatesArray = coordinates.map(coordinate => {\n            return coordinate.split(\",\");\n          });\n\n          // add each coordinate to the path\n          const path = [];\n          coordinatesArray.forEach(coordinate => {\n            path.push({\n              lat: parseFloat(coordinate[0]),\n              lng: parseFloat(coordinate[1])\n            });\n          });\n\n          // create polygon\n          const polygon = new window.google.maps.Polygon({\n            strokeColor: \"#0ba837\",\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: \"#0ba837\",\n            fillOpacity: 0.35,\n            map,\n            path: path,\n            isComplete: false\n          });\n          polygon.addListener(\"click\", () => {\n            this.showData();\n          });\n        }\n      });\n    }\n    this.initDrawing(map);\n  }\n  getFields(id) {\n    return axios.get(URL + \"getfieldsbyid/\" + id + \"/\").then(res => {\n      console.log(res);\n      return res.data;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  initDrawing(map) {\n    // allow drawing on map\n    const drawingManager = new window.google.maps.drawing.DrawingManager({\n      // add drawing options here\n      drawingControlOptions: {\n        drawingModes: [window.google.maps.drawing.OverlayType.POLYGON, window.google.maps.drawing.OverlayType.RECTANGLE],\n        // add labels to drawing options\n        position: window.google.maps.ControlPosition.TOP_CENTER\n      },\n      polygonOptions: {\n        editable: true,\n        clickable: true,\n        strokeColor: \"#0ba837\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#0ba837\",\n        fillOpacity: 0.35\n      },\n      rectangleOptions: {\n        editable: true,\n        clickable: true,\n        strokeColor: \"#0ba837\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#0ba837\",\n        fillOpacity: 0.35\n      }\n    });\n    drawingManager.setDrawingMode(null);\n    drawingManager.setOptions({\n      drawingControl: false\n    });\n    const addFieldButton = document.getElementById(\"addNewField\");\n    addFieldButton.addEventListener(\"click\", () => {\n      if (drawingManager.drawingControl === false) {\n        // If drawing mode is off, turn it on for polygons and rectangles\n        drawingManager.setOptions({\n          drawingControl: true\n        });\n\n        // delete the rectangle being drawn\n        drawingManager.setDrawingMode(null);\n      } else {\n        // If drawing mode is on, turn it off\n        drawingManager.setDrawingMode(null);\n        drawingManager.setOptions({\n          drawingControl: false\n        });\n      }\n    });\n    window.google.maps.event.addListener(drawingManager, 'polygoncomplete', polygon => {\n      document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\n        popup.remove();\n        if (!polygon.isComplete) {\n          polygon.setMap(null);\n        }\n        if (document.getElementById(\"fieldTable\").classList.contains(\"hidden\")) {\n          drawingManager.setOptions({\n            drawingControl: false\n          });\n        }\n      });\n      drawingManager.setOptions({\n        drawingControl: false\n      });\n      drawingManager.setDrawingMode(null);\n\n      //hide a label\n      document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\n      const popup = document.createElement('div');\n      popup.classList.add('popup');\n      const message = document.createElement('p');\n      message.textContent = 'Do you want to add this polygon?';\n      const acceptButton = document.createElement('button');\n      acceptButton.textContent = 'Add';\n      const cancelButton = document.createElement('button');\n      cancelButton.textContent = 'Cancel';\n      acceptButton.addEventListener('click', () => {\n        let cancelFormSubmitPromise = false;\n        polygon.setEditable(false);\n        popup.remove();\n        document.getElementById(\"createField\").classList.remove(\"hidden\");\n        const formSubmitPromise = new Promise((resolve, reject) => {\n          document.getElementById(\"createField\").addEventListener(\"submit\", event => {\n            event.preventDefault();\n            if (!cancelFormSubmitPromise) {\n              resolve(); // resolve the promise when the form is submitted\n            } else {\n              reject();\n            }\n          });\n        });\n        document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\n          cancelFormSubmitPromise = true;\n        });\n        formSubmitPromise.then(() => {\n          const paths = polygon.getPaths();\n          var vertices = [];\n          for (var i = 0; i < paths.getLength(); i++) {\n            var path = paths.getAt(i);\n            for (var j = 0; j < path.getLength(); j++) {\n              var vertex = path.getAt(j);\n              vertices.push({\n                lat: vertex.lat(),\n                lng: vertex.lng()\n              });\n            }\n          }\n\n          // convert the vertices to a string\n          const coordinates = vertices.map(vertex => {\n            return vertex.lat + \",\" + vertex.lng;\n          }).join(\";\");\n\n          // get the form data\n          const fieldName = document.getElementById(\"fieldName\").value;\n          const cropType = document.getElementById(\"cropType\").value;\n\n          // call the backend to add the coordinates\n          axios.post(URL + 'createfield/', {\n            name: fieldName,\n            crop_type: cropType,\n            type: \"polygon\",\n            coordinates: coordinates,\n            farm: this.props.farmDetails.id\n          }).then(res => {\n            console.log(res);\n            var table = document.getElementById(\"fieldTable\").getElementsByTagName('tbody')[0];\n            var row = table.insertRow(0);\n            var cell1 = row.insertCell(0);\n            var cell2 = row.insertCell(1);\n            var cell3 = row.insertCell(2);\n            console.log(polygon);\n            cell1.innerHTML = \"<span>\" + fieldName + \"</span>\";\n            cell2.innerHTML = \"<span>conditions</span>\";\n            cell3.innerHTML = \"<span>\" + cropType + \"</span>\";\n            polygon.isComplete = true;\n          }).catch(err => {\n            console.log(err);\n            polygon.setMap(null);\n          });\n\n          // add click listener to the rectangle\n          polygon.addListener(\"click\", () => {\n            this.showData();\n          });\n          document.getElementById(\"fieldName\").value = \"\";\n          document.getElementById(\"cropType\").value = \"\";\n\n          // allow drawing again\n          drawingManager.setOptions({\n            drawingControl: true\n          });\n        });\n      });\n      polygon.addListener(\"click\", () => {\n        this.showData();\n      });\n      cancelButton.addEventListener('click', () => {\n        polygon.setMap(null);\n        drawingManager.setOptions({\n          drawingControl: true\n        });\n        popup.remove();\n      });\n      popup.appendChild(message);\n      popup.appendChild(acceptButton);\n      popup.appendChild(cancelButton);\n\n      // show the popup on the div, but outside the map\n      document.getElementById(\"add\").appendChild(popup);\n    });\n    // add event listener to drawing manager rectangle\n    window.google.maps.event.addListener(drawingManager, 'rectanglecomplete', rectangle => {\n      document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\n        popup.remove();\n        if (!rectangle.isComplete) {\n          rectangle.setMap(null);\n        }\n        if (document.getElementById(\"fieldTable\").classList.contains(\"hidden\")) {\n          drawingManager.setOptions({\n            drawingControl: false\n          });\n        }\n      });\n      drawingManager.setOptions({\n        drawingControl: false\n      });\n      drawingManager.setDrawingMode(null);\n\n      //hide a label\n      document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\n      const popup = document.createElement('div');\n      popup.classList.add('popup');\n      const message = document.createElement('p');\n      message.textContent = 'Do you want to add this rectangle?';\n      const acceptButton = document.createElement('button');\n      acceptButton.textContent = 'Add';\n      const cancelButton = document.createElement('button');\n      cancelButton.textContent = 'Cancel';\n      acceptButton.addEventListener('click', () => {\n        let cancelFormSubmitPromise = false;\n        drawingManager.setOptions({\n          drawingControl: false\n        });\n        drawingManager.setDrawingMode(null);\n        rectangle.setEditable(false);\n        popup.remove();\n        document.getElementById(\"createField\").classList.remove(\"hidden\");\n        const formSubmitPromise = new Promise((resolve, reject) => {\n          document.getElementById(\"createField\").addEventListener(\"submit\", event => {\n            event.preventDefault();\n            if (!cancelFormSubmitPromise) {\n              resolve(); // resolve the promise when the form is submitted\n            } else {\n              reject();\n            }\n          });\n        });\n        document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\n          cancelFormSubmitPromise = true;\n        });\n        formSubmitPromise.then(() => {\n          const bounds = rectangle.getBounds();\n          const coordinates = {\n            north: bounds.getNorthEast().lat(),\n            east: bounds.getNorthEast().lng(),\n            south: bounds.getSouthWest().lat(),\n            west: bounds.getSouthWest().lng()\n          };\n          const lat = (parseFloat(coordinates.north) + parseFloat(coordinates.south)) / 2;\n          const lng = (parseFloat(coordinates.east) + parseFloat(coordinates.west)) / 2;\n          const marker = new window.google.maps.Marker({\n            position: {\n              lat: lat,\n              lng: lng\n            },\n            map: map,\n            label: {\n              text: document.getElementById(\"fieldName\").value,\n              color: \"#ffffff\",\n              fontWeight: \"bold\",\n              fontSize: \"10px\"\n            },\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              scale: 0\n            }\n          });\n\n          // convert coordinates string with ; to array\n          const coordinatesString = coordinates.north + \";\" + coordinates.east + \";\" + coordinates.south + \";\" + coordinates.west;\n\n          // get the form data\n          const fieldName = document.getElementById(\"fieldName\").value;\n          const cropType = document.getElementById(\"cropType\").value;\n\n          // call the backend to add the coordinates\n          axios.post(URL + 'createfield/', {\n            name: fieldName,\n            crop_type: cropType,\n            type: \"rectangle\",\n            coordinates: coordinatesString,\n            farm: this.props.farmDetails.id\n          }).then(res => {\n            console.log(res);\n            var table = document.getElementById(\"fieldTable\").getElementsByTagName('tbody')[0];\n            var row = table.insertRow(0);\n            var cell1 = row.insertCell(0);\n            var cell2 = row.insertCell(1);\n            var cell3 = row.insertCell(2);\n            cell1.innerHTML = \"<span>\" + fieldName + \"</span>\";\n            cell2.innerHTML = \"<span>conditions</span>\";\n            cell3.innerHTML = \"<span>\" + cropType + \"</span>\";\n            rectangle.isComplete = true;\n          }).catch(err => {\n            console.log(err);\n            rectangle.setMap(null);\n          });\n\n          // add click listener to the rectangle\n          rectangle.addListener(\"click\", () => {\n            this.showData();\n          });\n          document.getElementById(\"fieldName\").value = \"\";\n          document.getElementById(\"cropType\").value = \"\";\n        });\n      });\n      cancelButton.addEventListener('click', () => {\n        document.getElementById(\"addFieldsHeader\").classList.remove(\"hidden\");\n        rectangle.setMap(null);\n        drawingManager.setOptions({\n          drawingControl: true\n        });\n        popup.remove();\n      });\n      popup.appendChild(message);\n      popup.appendChild(acceptButton);\n      popup.appendChild(cancelButton);\n\n      // show the popup on the div, but outside the map\n      document.getElementById(\"add\").appendChild(popup);\n    });\n    drawingManager.setMap(map);\n  }\n  createField(event) {\n    event.preventDefault();\n    document.getElementById(\"createField\").classList.add(\"hidden\");\n    document.getElementById(\"fieldTable\").classList.remove(\"hidden\");\n    document.getElementById(\"addNewField\").innerHTML = \"<i className='fa-solid fa-plus'></i> Add Field\";\n    document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\n  }\n\n  /*cancel() {\r\n      document.getElementById(\"createField\").classList.add(\"hidden\");\r\n  }*/\n\n  showFieldForm() {\n    var createFieldBTN = document.getElementById(\"addNewField\");\n    document.getElementById(\"fieldTable\").classList.toggle(\"hidden\");\n\n    // check if table is hidden\n    if (document.getElementById(\"fieldTable\").classList.contains(\"hidden\")) {\n      createFieldBTN.innerHTML = \"<i className='fa-solid fa-xmark'></i> Cancel\";\n      document.getElementById(\"addFieldsHeader\").classList.remove(\"hidden\");\n    } else {\n      createFieldBTN.innerHTML = \"<i className='fa-solid fa-plus'></i> Add Field\";\n      document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\n      document.getElementById(\"createField\").classList.add(\"hidden\");\n    }\n  }\n  showData() {\n    console.log(\"show data\");\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldsTableConatiner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hidden\",\n          id: \"addFieldsHeader\",\n          children: \"Use the rectangle/polygon tool to draw the field onto map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.showFieldForm,\n          id: \"addNewField\",\n          className: \"fieldsTableBtn\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 103\n          }, this), \" Add Field\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.centreToMap,\n          id: \"centreToMap\",\n          className: \"fieldsTableBtn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa-solid fa-location-crosshairs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 100\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"createField\",\n          className: \"hidden\",\n          onSubmit: this.createField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Field Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: \"name\",\n            id: \"fieldName\",\n            placeholder: \"enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: \"crop_type\",\n            id: \"cropType\",\n            placeholder: \"select type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"loginInBtn\",\n            type: \"submit\",\n            value: \"Create Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"fieldTable\",\n          className: \"fieldsTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Fields\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Crop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Maps;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","URL","process","env","REACT_APP_URL","Maps","Component","componentDidMount","fields","getFields","props","farmDetails","id","console","log","map","window","google","maps","Map","document","getElementById","mapTypeId","center","lat","latitude","lng","longitude","zoom","streetViewControl","mapTypeControl","marker","Marker","position","label","fontFamily","text","color","table","getElementsByTagName","centreMap","addEventListener","setCenter","getPosition","setZoom","length","i","forEach","field","row","insertRow","cell","insertCell","innerHTML","name","crop_type","type","coordinates","split","rectangle","Rectangle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","bounds","north","parseFloat","south","east","west","isComplete","fontWeight","fontSize","icon","path","SymbolPath","CIRCLE","scale","coordinatesArray","coordinate","push","polygon","Polygon","addListener","showData","initDrawing","get","then","res","data","catch","err","drawingManager","drawing","DrawingManager","drawingControlOptions","drawingModes","OverlayType","POLYGON","RECTANGLE","ControlPosition","TOP_CENTER","polygonOptions","editable","clickable","rectangleOptions","setDrawingMode","setOptions","drawingControl","addFieldButton","event","popup","remove","setMap","classList","contains","add","createElement","message","textContent","acceptButton","cancelButton","cancelFormSubmitPromise","setEditable","formSubmitPromise","Promise","resolve","reject","preventDefault","paths","getPaths","vertices","getLength","getAt","j","vertex","join","fieldName","value","cropType","post","farm","cell1","cell2","cell3","appendChild","getBounds","getNorthEast","getSouthWest","coordinatesString","createField","showFieldForm","createFieldBTN","toggle","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","centreToMap","class","onSubmit","htmlFor","required","placeholder"],"sources":["/Users/ewanallison/Desktop/FarmIT/github/Untitled/frontend/src/components/Dashboard/Utilities/Maps.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst URL = process.env.REACT_APP_URL;\r\n\r\n\r\nclass Maps extends React.Component {\r\n\r\n    async componentDidMount() {\r\n\r\n        // check if any field already exists\r\n\r\n        const fields = await this.getFields(this.props.farmDetails.id);\r\n\r\n        console.log(fields);\r\n\r\n        const map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n\r\n            mapTypeId: \"satellite\",\r\n            center: { lat: this.props.farmDetails.latitude, lng: this.props.farmDetails.longitude },\r\n            zoom: 15,\r\n            streetViewControl: false,\r\n            mapTypeControl: false,\r\n        });\r\n\r\n\r\n        const marker = new window.google.maps.Marker({\r\n            position: { lat: this.props.farmDetails.latitude, lng: this.props.farmDetails.longitude },\r\n            map: map,\r\n            label: {\r\n                fontFamily: 'Fontawesome',\r\n                text: '\\uf015',\r\n                color: 'white',\r\n\r\n            },\r\n           \r\n        });\r\n\r\n        var table = document.getElementById(\"fieldTable\").getElementsByTagName('tbody')[0];\r\n        var centreMap = document.getElementById(\"centreToMap\");\r\n\r\n        centreMap.addEventListener(\"click\", () => {\r\n         map.setCenter(marker.getPosition());\r\n         map.setZoom(15);\r\n        });\r\n\r\n        if (fields.length > 0) {\r\n\r\n            var i = 0;\r\n\r\n            fields.forEach((field) => {\r\n\r\n                var row = table.insertRow(0);\r\n\r\n                var cell = row.insertCell(0);\r\n                cell.innerHTML = \"<span>\" + field.name + \"</span>\";\r\n\r\n                var cell = row.insertCell(1);\r\n                cell.innerHTML = \"<span>Conditions</span>\";\r\n\r\n                var cell = row.insertCell(2);\r\n                cell.innerHTML = \"<span>\" + field.crop_type + \"</span>\";\r\n\r\n\r\n                if (field.type === \"rectangle\") {\r\n\r\n                    const coordinates = field.coordinates.split(\";\");\r\n\r\n                    const rectangle = new window.google.maps.Rectangle({\r\n                        strokeColor: \"#0ba837\",\r\n                        strokeOpacity: 0.8,\r\n                        strokeWeight: 2,\r\n                        fillColor: \"#0ba837\",\r\n                        fillOpacity: 0.35,\r\n                        map,\r\n                        bounds: {\r\n                            north: parseFloat(coordinates[0]),\r\n                            south: parseFloat(coordinates[2]),\r\n                            east: parseFloat(coordinates[1]),\r\n                            west: parseFloat(coordinates[3]),\r\n                        },\r\n                        isComplete: false,\r\n                    });\r\n\r\n\r\n                    const lat = (parseFloat(coordinates[0]) + parseFloat(coordinates[2])) / 2;\r\n                    const lng = (parseFloat(coordinates[1]) + parseFloat(coordinates[3])) / 2;\r\n\r\n                    const marker = new window.google.maps.Marker({\r\n                        position: { lat: lat, lng: lng },\r\n                        map: map,\r\n                        label: {\r\n                            text: field.name,\r\n                            color: \"#ffffff\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"10px\",\r\n                        },\r\n                        icon: {\r\n                            path: window.google.maps.SymbolPath.CIRCLE,\r\n                            scale: 0,\r\n                        },\r\n\r\n                    });\r\n\r\n\r\n                } else {\r\n\r\n                    // separate the coordinates by ;\r\n                    const coordinates = field.coordinates.split(\";\");\r\n\r\n                    // split each coordinate by ,\r\n                    const coordinatesArray = coordinates.map((coordinate) => {\r\n                        return coordinate.split(\",\");\r\n                    });\r\n\r\n                    // add each coordinate to the path\r\n                    const path = [];\r\n                    coordinatesArray.forEach((coordinate) => {\r\n                        path.push({ lat: parseFloat(coordinate[0]), lng: parseFloat(coordinate[1]) });\r\n                    });\r\n\r\n                    // create polygon\r\n                    const polygon = new window.google.maps.Polygon({\r\n                        strokeColor: \"#0ba837\",\r\n                        strokeOpacity: 0.8,\r\n                        strokeWeight: 2,\r\n                        fillColor: \"#0ba837\",\r\n                        fillOpacity: 0.35,\r\n                        map,\r\n                        path: path,\r\n                        isComplete: false,\r\n                    });\r\n\r\n                    polygon.addListener(\"click\", () => {\r\n                        this.showData();\r\n                    });\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        this.initDrawing(map);\r\n    }\r\n\r\n    getFields(id) {\r\n        return axios\r\n            .get(URL + \"getfieldsbyid/\" + id + \"/\")\r\n            .then((res) => {\r\n                console.log(res);\r\n                return res.data;\r\n            }\r\n            )\r\n            .catch((err) => {\r\n                console.log(err);\r\n            }\r\n            );\r\n    }\r\n\r\n    initDrawing(map) {\r\n\r\n        // allow drawing on map\r\n        const drawingManager = new window.google.maps.drawing.DrawingManager({\r\n            // add drawing options here\r\n            drawingControlOptions: {\r\n                drawingModes: [\r\n                    window.google.maps.drawing.OverlayType.POLYGON,\r\n                    window.google.maps.drawing.OverlayType.RECTANGLE,\r\n                ],\r\n                // add labels to drawing options\r\n                position: window.google.maps.ControlPosition.TOP_CENTER,\r\n            },\r\n            polygonOptions: {\r\n                editable: true,\r\n                clickable: true,\r\n                strokeColor: \"#0ba837\",\r\n                strokeOpacity: 0.8,\r\n                strokeWeight: 2,\r\n                fillColor: \"#0ba837\",\r\n                fillOpacity: 0.35,\r\n            },\r\n\r\n            rectangleOptions: {\r\n                editable: true,\r\n                clickable: true,\r\n                strokeColor: \"#0ba837\",\r\n                strokeOpacity: 0.8,\r\n                strokeWeight: 2,\r\n                fillColor: \"#0ba837\",\r\n                fillOpacity: 0.35,\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n        drawingManager.setDrawingMode(null);\r\n\r\n            drawingManager.setOptions({\r\n                drawingControl: false,\r\n            });\r\n\r\n        const addFieldButton = document.getElementById(\"addNewField\");\r\n        addFieldButton.addEventListener(\"click\", () => {\r\n            if (drawingManager.drawingControl === false) {\r\n            // If drawing mode is off, turn it on for polygons and rectangles\r\n            drawingManager.setOptions({\r\n                drawingControl: true,\r\n            });\r\n\r\n            // delete the rectangle being drawn\r\n            drawingManager.setDrawingMode(null);\r\n            } else {\r\n            // If drawing mode is on, turn it off\r\n            drawingManager.setDrawingMode(null);\r\n            drawingManager.setOptions({ drawingControl: false });\r\n            }\r\n        });\r\n\r\n\r\n        window.google.maps.event.addListener(drawingManager, 'polygoncomplete', (polygon) => {\r\n\r\n            document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\r\n\r\n                popup.remove();\r\n\r\n                if (!polygon.isComplete){\r\n                    polygon.setMap(null);\r\n                }\r\n\r\n                if (document.getElementById(\"fieldTable\").classList.contains(\"hidden\")) {\r\n                    drawingManager.setOptions({\r\n                        drawingControl: false,\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n            drawingManager.setOptions({\r\n                drawingControl: false,\r\n            });\r\n\r\n            drawingManager.setDrawingMode(null);\r\n            \r\n            //hide a label\r\n            document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\r\n\r\n            const popup = document.createElement('div');\r\n            popup.classList.add('popup');\r\n\r\n            const message = document.createElement('p');\r\n            message.textContent = 'Do you want to add this polygon?';\r\n\r\n            const acceptButton = document.createElement('button');\r\n            acceptButton.textContent = 'Add';\r\n\r\n            const cancelButton = document.createElement('button');\r\n            cancelButton.textContent = 'Cancel';\r\n\r\n\r\n            acceptButton.addEventListener('click', () => {\r\n\r\n                let cancelFormSubmitPromise = false;\r\n\r\n                polygon.setEditable(false);\r\n\r\n                popup.remove();\r\n                document.getElementById(\"createField\").classList.remove(\"hidden\");\r\n\r\n\r\n\r\n                const formSubmitPromise = new Promise((resolve, reject) => {\r\n                    document.getElementById(\"createField\").addEventListener(\"submit\", (event) => {\r\n                        event.preventDefault();\r\n                        if (!cancelFormSubmitPromise) {\r\n                            resolve(); // resolve the promise when the form is submitted\r\n                        } else {\r\n                            reject();\r\n                        }\r\n                        });\r\n                });\r\n\r\n                document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\r\n                    cancelFormSubmitPromise = true;\r\n                });\r\n\r\n                \r\n\r\n                formSubmitPromise.then(() => {\r\n\r\n\r\n                    const paths = polygon.getPaths();\r\n                    var vertices = [];\r\n\r\n                    for (var i = 0; i < paths.getLength(); i++) {\r\n                        var path = paths.getAt(i);\r\n\r\n                        for (var j = 0; j < path.getLength(); j++) {\r\n                            var vertex = path.getAt(j);\r\n                            vertices.push({ lat: vertex.lat(), lng: vertex.lng() });\r\n                        }\r\n                    }\r\n\r\n\r\n                    // convert the vertices to a string\r\n                    const coordinates = vertices.map((vertex) => {\r\n                        return vertex.lat + \",\" + vertex.lng;\r\n                    }).join(\";\");\r\n\r\n\r\n                    // get the form data\r\n                    const fieldName = document.getElementById(\"fieldName\").value;\r\n                    const cropType = document.getElementById(\"cropType\").value;\r\n\r\n                    // call the backend to add the coordinates\r\n                    axios.post(URL + 'createfield/', {\r\n                        name: fieldName,\r\n                        crop_type: cropType,\r\n                        type: \"polygon\",\r\n                        coordinates: coordinates,\r\n                        farm: this.props.farmDetails.id,\r\n                    }).then((res) => {\r\n                        console.log(res);\r\n                        var table = document.getElementById(\"fieldTable\").getElementsByTagName('tbody')[0];\r\n\r\n                        var row = table.insertRow(0);\r\n\r\n                        var cell1 = row.insertCell(0);\r\n                        var cell2 = row.insertCell(1);\r\n                        var cell3 = row.insertCell(2);\r\n\r\n                        console.log(polygon);\r\n\r\n                        cell1.innerHTML = \"<span>\" + fieldName + \"</span>\";\r\n                        cell2.innerHTML = \"<span>conditions</span>\";\r\n                        cell3.innerHTML = \"<span>\" + cropType + \"</span>\";\r\n\r\n                        polygon.isComplete = true;\r\n\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        polygon.setMap(null);\r\n                    });\r\n\r\n\r\n                    // add click listener to the rectangle\r\n                    polygon.addListener(\"click\", () => {\r\n                        this.showData();\r\n                    });\r\n\r\n                    document.getElementById(\"fieldName\").value = \"\";\r\n                    document.getElementById(\"cropType\").value = \"\";\r\n\r\n\r\n                    // allow drawing again\r\n                    drawingManager.setOptions({\r\n                        drawingControl: true,\r\n                    });\r\n                });\r\n            });\r\n\r\n            polygon.addListener(\"click\", () => {\r\n                this.showData();\r\n            });\r\n\r\n            cancelButton.addEventListener('click', () => {\r\n                polygon.setMap(null);\r\n                drawingManager.setOptions({\r\n                    drawingControl: true,\r\n                });\r\n                popup.remove();\r\n            });\r\n\r\n            popup.appendChild(message);\r\n            popup.appendChild(acceptButton);\r\n            popup.appendChild(cancelButton);\r\n\r\n            // show the popup on the div, but outside the map\r\n            document.getElementById(\"add\").appendChild(popup);\r\n\r\n\r\n        });\r\n        // add event listener to drawing manager rectangle\r\n        window.google.maps.event.addListener(drawingManager, 'rectanglecomplete', (rectangle) => {\r\n            \r\n            document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\r\n\r\n                popup.remove();\r\n\r\n                if (!rectangle.isComplete){\r\n                    rectangle.setMap(null);\r\n                }\r\n\r\n                if (document.getElementById(\"fieldTable\").classList.contains(\"hidden\")) {\r\n                    drawingManager.setOptions({\r\n                        drawingControl: false,\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n            \r\n            drawingManager.setOptions({\r\n                drawingControl: false,\r\n            });\r\n\r\n            drawingManager.setDrawingMode(null);\r\n            \r\n            //hide a label\r\n            document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\r\n            \r\n\r\n            const popup = document.createElement('div');\r\n            popup.classList.add('popup');\r\n\r\n            const message = document.createElement('p');\r\n            message.textContent = 'Do you want to add this rectangle?';\r\n\r\n            const acceptButton = document.createElement('button');\r\n            acceptButton.textContent = 'Add';\r\n\r\n            const cancelButton = document.createElement('button');\r\n            cancelButton.textContent = 'Cancel';\r\n\r\n\r\n            acceptButton.addEventListener('click', () => {\r\n\r\n                let cancelFormSubmitPromise = false;\r\n\r\n                drawingManager.setOptions({\r\n                    drawingControl: false,\r\n                });\r\n\r\n                drawingManager.setDrawingMode(null);\r\n\r\n                rectangle.setEditable(false);\r\n\r\n                popup.remove();\r\n                document.getElementById(\"createField\").classList.remove(\"hidden\");\r\n\r\n            \r\n                const formSubmitPromise = new Promise((resolve, reject) => {\r\n                    document.getElementById(\"createField\").addEventListener(\"submit\", (event) => {\r\n                        event.preventDefault();\r\n                        if (!cancelFormSubmitPromise) {\r\n                            resolve(); // resolve the promise when the form is submitted\r\n                        } else {\r\n                            reject();\r\n                        }\r\n                        });\r\n                });\r\n\r\n                document.getElementById(\"addNewField\").addEventListener(\"click\", () => {\r\n                    cancelFormSubmitPromise = true;\r\n                });\r\n\r\n                formSubmitPromise.then(() => {\r\n\r\n                    const bounds = rectangle.getBounds();\r\n                    const coordinates = {\r\n                        north: bounds.getNorthEast().lat(),\r\n                        east: bounds.getNorthEast().lng(),\r\n                        south: bounds.getSouthWest().lat(),\r\n                        west: bounds.getSouthWest().lng(),\r\n                    };\r\n\r\n                    const lat = (parseFloat(coordinates.north) + parseFloat(coordinates.south)) / 2;\r\n                    const lng = (parseFloat(coordinates.east) + parseFloat(coordinates.west)) / 2;\r\n\r\n                    const marker = new window.google.maps.Marker({\r\n                        position: { lat: lat, lng: lng },\r\n                        map: map,\r\n                        label: {\r\n                            text: document.getElementById(\"fieldName\").value,\r\n                            color: \"#ffffff\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"10px\",\r\n                        },\r\n                        icon: {\r\n                            path: window.google.maps.SymbolPath.CIRCLE,\r\n                            scale: 0,\r\n                        },\r\n\r\n                    });\r\n\r\n\r\n                    // convert coordinates string with ; to array\r\n                    const coordinatesString = coordinates.north + \";\" + coordinates.east + \";\" + coordinates.south + \";\" + coordinates.west;\r\n\r\n                    // get the form data\r\n                    const fieldName = document.getElementById(\"fieldName\").value;\r\n                    const cropType = document.getElementById(\"cropType\").value;\r\n\r\n\r\n                    // call the backend to add the coordinates\r\n                    axios.post(URL + 'createfield/', {\r\n                        name: fieldName,\r\n                        crop_type: cropType,\r\n                        type: \"rectangle\",\r\n                        coordinates: coordinatesString,\r\n                        farm: this.props.farmDetails.id,\r\n                    }).then((res) => {\r\n                        console.log(res);\r\n                        var table = document.getElementById(\"fieldTable\").getElementsByTagName('tbody')[0];\r\n\r\n\r\n                        var row = table.insertRow(0);\r\n\r\n                        var cell1 = row.insertCell(0);\r\n                        var cell2 = row.insertCell(1);\r\n                        var cell3 = row.insertCell(2);\r\n\r\n\r\n                        cell1.innerHTML = \"<span>\" + fieldName + \"</span>\";\r\n                        cell2.innerHTML = \"<span>conditions</span>\";\r\n                        cell3.innerHTML = \"<span>\" + cropType + \"</span>\";\r\n\r\n                        rectangle.isComplete = true;\r\n\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        rectangle.setMap(null);\r\n                    });\r\n\r\n\r\n                    // add click listener to the rectangle\r\n                    rectangle.addListener(\"click\", () => {\r\n                        this.showData();\r\n                    });\r\n\r\n                    document.getElementById(\"fieldName\").value = \"\";\r\n                    document.getElementById(\"cropType\").value = \"\";\r\n                });\r\n            });\r\n\r\n            cancelButton.addEventListener('click', () => {\r\n                document.getElementById(\"addFieldsHeader\").classList.remove(\"hidden\");\r\n                rectangle.setMap(null);\r\n                drawingManager.setOptions({\r\n                    drawingControl: true,\r\n                });\r\n                popup.remove();\r\n            });\r\n\r\n            popup.appendChild(message);\r\n            popup.appendChild(acceptButton);\r\n            popup.appendChild(cancelButton);\r\n\r\n            // show the popup on the div, but outside the map\r\n            document.getElementById(\"add\").appendChild(popup);\r\n\r\n           \r\n        });\r\n\r\n        drawingManager.setMap(map);\r\n    }\r\n\r\n\r\n    createField(event) {\r\n        event.preventDefault();\r\n        document.getElementById(\"createField\").classList.add(\"hidden\");\r\n        document.getElementById(\"fieldTable\").classList.remove(\"hidden\");\r\n        document.getElementById(\"addNewField\").innerHTML = \"<i className='fa-solid fa-plus'></i> Add Field\";\r\n        document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\r\n    }\r\n\r\n    \r\n\r\n    /*cancel() {\r\n        document.getElementById(\"createField\").classList.add(\"hidden\");\r\n    }*/\r\n\r\n    showFieldForm() {\r\n\r\n        var createFieldBTN = document.getElementById(\"addNewField\");       \r\n\r\n        document.getElementById(\"fieldTable\").classList.toggle(\"hidden\");\r\n\r\n        // check if table is hidden\r\n        if (document.getElementById(\"fieldTable\").classList.contains(\"hidden\")) {\r\n            createFieldBTN.innerHTML = \"<i className='fa-solid fa-xmark'></i> Cancel\";\r\n            document.getElementById(\"addFieldsHeader\").classList.remove(\"hidden\");\r\n\r\n        } else {\r\n            createFieldBTN.innerHTML = \"<i className='fa-solid fa-plus'></i> Add Field\";\r\n            document.getElementById(\"addFieldsHeader\").classList.add(\"hidden\");\r\n            document.getElementById(\"createField\").classList.add(\"hidden\");\r\n        }\r\n\r\n    }\r\n\r\n    showData(){\r\n        console.log(\"show data\");\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n\r\n                <div id=\"map\">\r\n                </div>\r\n\r\n                <div className=\"fieldsTableConatiner\">\r\n\r\n                    <h2 className=\"hidden\" id=\"addFieldsHeader\">Use the rectangle/polygon tool to draw the field onto map</h2>\r\n                    <button onClick={this.showFieldForm} id=\"addNewField\" className=\"fieldsTableBtn\"> <i className=\"fa-solid fa-plus\"></i> Add Field</button>\r\n                    <button onClick={this.centreToMap} id=\"centreToMap\" className=\"fieldsTableBtn\"><i class=\"fa-solid fa-location-crosshairs\"></i></button>\r\n\r\n\r\n                    <form id=\"createField\" className=\"hidden\" onSubmit={this.createField}>\r\n                        <label htmlFor=\"name\">Field Name</label>\r\n                        <input required type=\"text\" name=\"name\" id=\"fieldName\" placeholder=\"enter name\" />\r\n                        <label htmlFor=\"name\">Crop</label>\r\n                        <input required type=\"text\" name=\"crop_type\" id=\"cropType\" placeholder=\"select type\" />\r\n                        <input id=\"loginInBtn\" type=\"submit\" value=\"Create Field\" />\r\n                    </form>\r\n\r\n                    <div id=\"add\"></div>\r\n\r\n                    <table id='fieldTable' className=\"fieldsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th><h2>Fields</h2></th>\r\n                                <th><h2>Condition</h2></th>\r\n                                <th><h2>Crop</h2></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                                <td><p></p></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Maps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}